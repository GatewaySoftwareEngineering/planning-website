## Autogenerated by Scribe. DO NOT MODIFY.

name: 'status management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/boards/{board_id}/statuses'
    metadata:
      groupName: 'status management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the status.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: repellat
        type: string
        custom: []
      limit:
        name: limit
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 20
        type: integer
        custom: []
    cleanBodyParameters:
      name: repellat
      limit: 17
      page: 20
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"data":[{"id":6,"board_id":2,"name":"close","created_at":"2023-02-06T08:25:26.000000Z","updated_at":"2023-02-06T08:25:26.000000Z"},{"id":5,"board_id":2,"name":"done","created_at":"2023-02-06T08:25:21.000000Z","updated_at":"2023-02-06T08:25:21.000000Z"},{"id":4,"board_id":2,"name":"testing","created_at":"2023-02-06T08:25:06.000000Z","updated_at":"2023-02-06T08:25:06.000000Z"},{"id":3,"board_id":2,"name":"dev-review","created_at":"2023-02-06T08:24:46.000000Z","updated_at":"2023-02-06T08:24:46.000000Z"},{"id":2,"board_id":2,"name":"in-progress","created_at":"2023-02-06T08:24:33.000000Z","updated_at":"2023-02-06T08:24:33.000000Z"},{"id":1,"board_id":2,"name":"to-do","created_at":"2023-02-06T08:23:56.000000Z","updated_at":"2023-02-06T08:23:56.000000Z"}],"pagination":{"total_count":6,"total_pages":1,"current_page":1,"limit":10}}'
        headers: []
        description: 'unauthenticated user browses statuses'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/boards/{board_id}/statuses'
    metadata:
      groupName: 'status management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created status in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: necessitatibus
        type: string
        custom: []
      initial:
        name: initial
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      name: necessitatibus
      initial: false
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"name":"to-do","board_id":2,"updated_at":"2023-02-06T08:23:56.000000Z","created_at":"2023-02-06T08:23:56.000000Z","id":1}}'
        headers: []
        description: 'unauthenticated user creates new status'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/boards/{board_id}/statuses/{id}'
    metadata:
      groupName: 'status management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified status.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the status.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":7,"board_id":2,"name":"test2","created_at":"2023-02-06T08:25:32.000000Z","updated_at":"2023-02-06T08:26:00.000000Z","board":{"id":2,"user_id":1,"name":"Project 2","description":"Our first project","created_at":"2023-02-05T12:08:58.000000Z","updated_at":"2023-02-05T14:11:34.000000Z","owner":{"id":1,"role_id":1,"name":"Dima","active":1,"email":"dimaaljammal9410@gmail.com","email_verified_at":null,"created_at":"2023-02-05T12:08:36.000000Z","updated_at":"2023-02-05T12:08:36.000000Z"}}}}'
        headers: []
        description: 'unauthenticated user shows status'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/boards/{board_id}/statuses/{id}'
    metadata:
      groupName: 'status management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified status in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the status.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: deleniti
        type: string
        custom: []
      initial:
        name: initial
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      name: deleniti
      initial: false
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":7,"board_id":2,"name":"test2","created_at":"2023-02-06T08:25:32.000000Z","updated_at":"2023-02-06T08:26:00.000000Z","board":{"id":2,"user_id":1,"name":"Project 2","description":"Our first project","created_at":"2023-02-05T12:08:58.000000Z","updated_at":"2023-02-05T14:11:34.000000Z","owner":{"id":1,"role_id":1,"name":"Dima","active":1,"email":"dimaaljammal9410@gmail.com","email_verified_at":null,"created_at":"2023-02-05T12:08:36.000000Z","updated_at":"2023-02-05T12:08:36.000000Z"}}}}'
        headers: []
        description: 'unauthenticated user updates a status'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/boards/{board_id}/statuses/{id}'
    metadata:
      groupName: 'status management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified status from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the status.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":true}'
        headers: []
        description: 'unauthenticated user deletes a status'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
