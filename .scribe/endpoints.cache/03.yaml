## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Role management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/roles
    metadata:
      groupName: 'Role management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of roles.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 200
        content: '[{"id":1,"name":"product_owner","display_name":"Product Owner","created_at":"2023-02-04T09:09:56.000000Z","updated_at":"2023-02-04T09:09:56.000000Z"},{"id":2,"name":"developer","display_name":"Developer","created_at":"2023-02-04T09:11:23.000000Z","updated_at":"2023-02-04T09:11:23.000000Z"},{"id":3,"name":"tester","display_name":"Tester","created_at":"2023-02-04T09:11:54.000000Z","updated_at":"2023-02-04T09:11:54.000000Z"}]'
        headers: []
        description: 'unauthenticated user retrieve roles'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/roles
    metadata:
      groupName: 'Role management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created role in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      display_name:
        name: display_name
        description: ''
        required: true
        example: iste
        type: string
        custom: []
    cleanBodyParameters:
      name: temporibus
      display_name: iste
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"name":"admin","display_name":"Admin","id":1}}'
        headers: []
        description: 'unauthenticated user create new role'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/roles/{id}'
    metadata:
      groupName: 'Role management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/roles/{id}'
    metadata:
      groupName: 'Role management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified role in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      display_name:
        name: display_name
        description: ''
        required: false
        example: non
        type: string
        custom: []
      permissions:
        name: permissions
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        custom: []
      'permissions[].id':
        name: 'permissions[].id'
        description: ''
        required: true
        example: laboriosam
        type: string
        custom: []
    cleanBodyParameters:
      display_name: non
      permissions:
        -
          id: laboriosam
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":3,"name":"tester","display_name":"Tester"}}'
        headers: []
        description: 'unauthenticated user create new role'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/roles/{id}'
    metadata:
      groupName: 'Role management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified role from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
