## Autogenerated by Scribe. DO NOT MODIFY.

name: 'user management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'user management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: minus
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: hdouglas@example.org
        type: string
        custom: []
      role_id:
        name: role_id
        description: ''
        required: false
        example: 5
        type: integer
        custom: []
      limit:
        name: limit
        description: ''
        required: false
        example: 20
        type: integer
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 15
        type: integer
        custom: []
    cleanBodyParameters:
      name: minus
      email: hdouglas@example.org
      role_id: 5
      limit: 20
      page: 15
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"data":[{"id":3,"role_id":2,"name":"Developer","active":1,"email":"developer@example.com","email_verified_at":null,"created_at":"2023-02-05T09:45:18.000000Z","updated_at":"2023-02-05T09:45:18.000000Z"},{"id":2,"role_id":5,"name":"Product owner","active":1,"email":"product_ower@example.com","email_verified_at":null,"created_at":"2023-02-05T09:44:02.000000Z","updated_at":"2023-02-05T09:44:02.000000Z"}],"pagination":{"total_count":4,"total_pages":2,"current_page":2,"limit":2}}'
        headers: []
        description: 'unauthenticated user creates new user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'user management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: thea68@example.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '=N_^.VL'
        type: string
        custom: []
      role_id:
        name: role_id
        description: ''
        required: true
        example: 11
        type: integer
        custom: []
    cleanBodyParameters:
      name: quia
      email: thea68@example.com
      password: '=N_^.VL'
      role_id: 11
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"name":"Product owner","email":"product_ower@example.com","role_id":"5","updated_at":"2023-02-05T09:44:02.000000Z","created_at":"2023-02-05T09:44:02.000000Z","id":2}}'
        headers: []
        description: 'unauthenticated user browses users'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'user management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":4,"role_id":3,"name":"Tester","active":1,"email":"tester@example.com","email_verified_at":null,"created_at":"2023-02-05T09:45:37.000000Z","updated_at":"2023-02-05T09:45:37.000000Z"}}'
        headers: []
        description: 'unauthenticated user shows status'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: 'user management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: culpa
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: jroberts@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: '+b8HA:DehSE'
        type: string
        custom: []
      role_id:
        name: role_id
        description: ''
        required: false
        example: 7
        type: integer
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      name: culpa
      email: jroberts@example.org
      password: '+b8HA:DehSE'
      role_id: 7
      is_active: false
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":5,"role_id":3,"name":"Tester 2","active":1,"email":"tester2@example.com","email_verified_at":null,"created_at":"2023-02-05T11:02:34.000000Z","updated_at":"2023-02-05T11:15:50.000000Z"}}'
        headers: []
        description: 'unauthenticated user updates a user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 'user management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":true}'
        headers: []
        description: 'unauthenticated user deletes a user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
