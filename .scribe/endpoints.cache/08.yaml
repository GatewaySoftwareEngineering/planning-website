## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - PUT
    uri: 'api/boards/{board_id}/tasks/{task_id}/assign'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign task to user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      task_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: et
        type: string
        custom: []
    cleanBodyParameters:
      user_id: et
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":3,"board_id":4,"status_id":2,"assignee_id":11,"title":"Test task","description":"test","image":null,"due_date":"2023-05-01","created_at":"2023-02-07T17:18:17.000000Z","updated_at":"2023-02-08T09:06:41.000000Z","board":{"id":4,"user_id":2,"name":"Project 1","description":"First project","created_at":"2023-02-05T12:58:21.000000Z","updated_at":"2023-02-05T12:58:21.000000Z","owner":{"id":2,"role_id":5,"name":"Product owner","active":1,"email":"product_ower@example.com","email_verified_at":null,"created_at":"2023-02-05T09:44:02.000000Z","updated_at":"2023-02-05T09:44:02.000000Z"}},"assignee":{"id":9,"board_id":2,"user_id":3,"created_at":"2023-02-06T07:14:45.000000Z","updated_at":"2023-02-06T07:14:45.000000Z","laravel_through_key":3}}}'
        headers: []
        description: 'unauthenticated user assigns a task to user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/boards/{board_id}/tasks/{task_id}/move'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'move a task to another status.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      task_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status_id:
        name: status_id
        description: ''
        required: true
        example: perferendis
        type: string
        custom: []
    cleanBodyParameters:
      status_id: perferendis
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":2,"board_id":2,"status_id":2,"assignee_id":null,"title":"Test task","description":"test","image":null,"due_date":"2023-05-01","created_at":"2023-02-07T17:17:48.000000Z","updated_at":"2023-02-08T06:54:33.000000Z"}}'
        headers: []
        description: 'unauthenticated user moves a task to another status'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/boards/{board_id}/tasks'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created task in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status_id:
        name: status_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      assignee_id:
        name: assignee_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: necessitatibus
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Totam voluptatem sit perferendis illo eaque.'
        type: string
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: officia
        type: string
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-02-08T11:55:09'
        type: string
        custom: []
      0:
        name: '0'
        description: 'Must be a date after or equal to <code>today</code>.'
        required: false
        example: '2069-05-24'
        type: string
        custom: []
      labels:
        name: labels
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        custom: []
      'labels[].id':
        name: 'labels[].id'
        description: ''
        required: true
        example: quod
        type: string
        custom: []
    cleanBodyParameters:
      title: necessitatibus
      description: 'Totam voluptatem sit perferendis illo eaque.'
      image: officia
      due_date: '2023-02-08T11:55:09'
      0: '2069-05-24'
      labels:
        -
          id: quod
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"title":"Test task","description":"test","image":null,"due_date":"2023-05-01","status_id":1,"board_id":2,"updated_at":"2023-02-07T17:22:23.000000Z","created_at":"2023-02-07T17:22:23.000000Z","id":5,"board":{"id":2,"user_id":1,"name":"Project 1","description":"First project","created_at":"2023-02-05T12:08:58.000000Z","updated_at":"2023-02-05T14:11:34.000000Z","owner":{"id":1,"role_id":1,"name":"Dima","active":1,"email":"dimaaljammal9410@gmail.com","email_verified_at":null,"created_at":"2023-02-05T12:08:36.000000Z","updated_at":"2023-02-05T12:08:36.000000Z"}}}}'
        headers: []
        description: 'unauthenticated user creates new task'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/boards/{board_id}/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'View task with log.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":3,"board_id":4,"status_id":2,"assignee_id":11,"title":"Test task","description":"test","image":null,"due_date":"2023-05-01","created_at":"2023-02-07T17:18:17.000000Z","updated_at":"2023-02-08T09:06:41.000000Z","board":{"id":4,"user_id":2,"name":"Project 1","description":"First project","created_at":"2023-02-05T12:58:21.000000Z","updated_at":"2023-02-05T12:58:21.000000Z","owner":{"id":2,"role_id":5,"name":"Product owner","active":1,"email":"product_ower@example.com","email_verified_at":null,"created_at":"2023-02-05T09:44:02.000000Z","updated_at":"2023-02-05T09:44:02.000000Z"}},"assignee":{"id":9,"board_id":2,"user_id":3,"created_at":"2023-02-06T07:14:45.000000Z","updated_at":"2023-02-06T07:14:45.000000Z","laravel_through_key":3}}}'
        headers: []
        description: 'unauthenticated user assigns a task to user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/boards/{board_id}/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/boards/{board_id}/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
