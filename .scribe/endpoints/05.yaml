name: 'Board management'
description: ''
endpoints:
  -
    httpMethods:
      - PUT
    uri: 'api/boards/{board_id}/invite'
    metadata:
      groupName: 'Board management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Invite user to board'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: odit
        type: string
        custom: []
    cleanBodyParameters:
      user_id: odit
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":2,"user_id":1,"name":"Project 2","description":"Our first project","created_at":"2023-02-05T12:08:58.000000Z","updated_at":"2023-02-05T14:11:34.000000Z","owner":{"id":1,"role_id":1,"name":"Dima","active":1,"email":"dimaaljammal9410@gmail.com","email_verified_at":null,"created_at":"2023-02-05T12:08:36.000000Z","updated_at":"2023-02-05T12:08:36.000000Z"}}}'
        headers: []
        description: 'unauthenticated user invite specified user to a board'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/boards
    metadata:
      groupName: 'Board management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the boards.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: qui
        type: string
        custom: []
      limit:
        name: limit
        description: ''
        required: false
        example: 1
        type: integer
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 20
        type: integer
        custom: []
    cleanBodyParameters:
      name: qui
      limit: 1
      page: 20
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"data":[{"id":13,"user_id":1,"name":"project3","description":null,"created_at":"2023-02-05T16:10:08.000000Z","updated_at":"2023-02-05T16:10:08.000000Z"},{"id":5,"user_id":2,"name":"Project 2","description":null,"created_at":"2023-02-05T12:59:38.000000Z","updated_at":"2023-02-05T12:59:38.000000Z"},{"id":2,"user_id":1,"name":"Project 2","description":"Our first project","created_at":"2023-02-05T12:08:58.000000Z","updated_at":"2023-02-05T14:11:34.000000Z"}],"pagination":{"total_count":3,"total_pages":1,"current_page":1,"limit":10}}'
        headers: []
        description: 'unauthenticated user creates new user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/boards
    metadata:
      groupName: 'Board management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created board in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: alias
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Temporibus sint autem qui expedita.'
        type: string
        custom: []
    cleanBodyParameters:
      name: alias
      description: 'Temporibus sint autem qui expedita.'
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"name":"Project 1","description":"Our first project","updated_at":"2023-02-05T12:10:08.000000Z","created_at":"2023-02-05T12:10:08.000000Z","id":3}}'
        headers: []
        description: 'unauthenticated user creates new user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/boards/{id}'
    metadata:
      groupName: 'Board management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified board.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":3,"name":"Project 1","description":"Our first project","created_at":"2023-02-05T12:10:08.000000Z","updated_at":"2023-02-05T12:10:08.000000Z"}}'
        headers: []
        description: 'unauthenticated user creates new board'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/boards/{id}'
    metadata:
      groupName: 'Board management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified board in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Reprehenderit qui corporis reprehenderit.'
        type: string
        custom: []
    cleanBodyParameters:
      name: omnis
      description: 'Reprehenderit qui corporis reprehenderit.'
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":3,"name":"Project 1","description":"Our first project","created_at":"2023-02-05T12:10:08.000000Z","updated_at":"2023-02-05T12:10:08.000000Z"}}'
        headers: []
        description: 'unauthenticated user updates a board'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/boards/{id}'
    metadata:
      groupName: 'Board management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified board from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":true}'
        headers: []
        description: 'unauthenticated user deletes a board'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
