name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - PUT
    uri: 'api/boards/{board_id}/tasks/{task_id}/assign'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign task to user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      task_id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: alias
        type: string
        custom: []
    cleanBodyParameters:
      user_id: alias
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":10,"title":"Task 1","description":"Task 1 description","image":null,"due_date":"2023-02-10","assignee":null,"current_status":"in-progress","labels":[{"id":1,"name":"Api"},{"id":2,"name":"Website"}]}}'
        headers: []
        description: 'unauthenticated user assigns a task to user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/boards/{board_id}/tasks/{task_id}/move'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'move a task to another status.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      task_id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status_id:
        name: status_id
        description: ''
        required: true
        example: aperiam
        type: string
        custom: []
    cleanBodyParameters:
      status_id: aperiam
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":10,"title":"Task 1","description":"Task 1 description","image":null,"due_date":"2023-02-10","assignee":null,"current_status":"to-do","labels":[{"id":1,"name":"Api"},{"id":2,"name":"Website"}]}}'
        headers: []
        description: 'unauthenticated user moves a task to another status'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/boards/{board_id}/tasks'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the tasks.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: ex
        type: string
        custom: []
      limit:
        name: limit
        description: ''
        required: false
        example: 14
        type: integer
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 19
        type: integer
        custom: []
    cleanBodyParameters:
      title: ex
      limit: 14
      page: 19
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"data":[{"id":3,"title":"Test task","description":"test","image":null,"due_date":"2023-05-01","assignee":"Developer","current_status":"in-progress","labels":[]},{"id":2,"title":"Test task","description":"test","image":null,"due_date":"2023-05-01","assignee":null,"current_status":"in-progress","labels":[]}],"pagination":{"total_count":2,"total_pages":1,"current_page":1,"limit":10}}'
        headers: []
        description: 'unauthenticated user browses tasks'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/boards/{board_id}/tasks'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created task in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status_id:
        name: status_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      assignee_id:
        name: assignee_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Est dicta aperiam explicabo.'
        type: string
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: cupiditate
        type: string
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-02-08T17:51:39'
        type: string
        custom: []
      0:
        name: '0'
        description: 'Must be a date after or equal to <code>today</code>.'
        required: false
        example: '2049-09-24'
        type: string
        custom: []
      labels:
        name: labels
        description: ''
        required: false
        example:
          - accusamus
        type: 'string[]'
        custom: []
      'labels[].id':
        name: 'labels[].id'
        description: ''
        required: true
        example: neque
        type: string
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: 'Est dicta aperiam explicabo.'
      image: cupiditate
      due_date: '2023-02-08T17:51:39'
      0: '2049-09-24'
      labels:
        - accusamus
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":10,"title":"Task 1","description":"Task 1 description","image":null,"due_date":"2023-02-10","assignee":null,"current_status":"to-do","labels":[{"id":1,"name":"Api"}]}}'
        headers: []
        description: 'unauthenticated user creates new task'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/boards/{board_id}/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'View task with log.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":10,"title":"Task 1","description":"Task 1 description","image":null,"due_date":"2023-02-10","assignee":null,"current_status":"in-progress","labels":[{"id":1,"name":"Api"},{"id":2,"name":"Website"}]}}'
        headers: []
        description: 'unauthenticated user assigns a task to user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/boards/{board_id}/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified task in storage.'
      description: .
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status_id:
        name: status_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      assignee_id:
        name: assignee_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: false
        example: accusamus
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Deleniti quod ipsum consequuntur illo.'
        type: string
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: sint
        type: string
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-02-08T17:51:40'
        type: string
        custom: []
      0:
        name: '0'
        description: 'Must be a date after or equal to <code>today</code>.'
        required: false
        example: '2094-09-24'
        type: string
        custom: []
      labels:
        name: labels
        description: ''
        required: false
        example:
          - voluptas
        type: 'string[]'
        custom: []
      'labels[].id':
        name: 'labels[].id'
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
    cleanBodyParameters:
      title: accusamus
      description: 'Deleniti quod ipsum consequuntur illo.'
      image: sint
      due_date: '2023-02-08T17:51:40'
      0: '2094-09-24'
      labels:
        - voluptas
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers: []
        description: 'unauthenticated user'
        custom: []
      -
        status: 422
        content: '{"message":"The email must be a valid email address.","errors":{"email":["The email must be a valid email address."]}}'
        headers: []
        description: 'Invalid inputs'
        custom: []
      -
        status: 403
        content: '{"message":"This action is unauthorized."}'
        headers: []
        description: Forbidden
        custom: []
      -
        status: 200
        content: '{"message":"Success","data":{"id":10,"title":"Task 1","description":"Task 1 description","image":null,"due_date":"2023-02-10","assignee":null,"current_status":"to-do","labels":[{"id":1,"name":"Api"},{"id":2,"name":"Website"}]}}'
        headers: []
        description: 'unauthenticated user creates new task'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/boards/{board_id}/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      board_id:
        name: board_id
        description: 'The ID of the board.'
        required: true
        example: 2
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      board_id: 2
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
